TARGET_NAME=mutexgear
TARGET_TEST_SUFFIX=_test

HAVE_PTHREAD_H=YES
HAVE_LIBPTHREAD=YES
HAVE_LIBSTDCXX=NO
HAVE_PTHREAD_MUTEXATTR_GETPRIOCEILING=NO
HAVE_PTHREAD_MUTEXATTR_GETPROTOCOL=NO

UNAME=$(word 1,$(shell uname))

ifeq ($(UNAME),Linux)
OS_EXE_EXT=.bin
OS_SO_EXT=.so
OS_OBJ_EXT=.o
OS_C_EXT=.c
OS_CPP_EXT=.cpp
OS_LIB_PREF=lib
OS_LIBPTHREAD_SUFF=
endif

ifeq ($(UNAME),Workstation)
OS_EXE_EXT=.exe
OS_SO_EXT=.dll
OS_OBJ_EXT=.obj
OS_C_EXT=.c
OS_CPP_EXT=.cpp
OS_LIB_PREF=
OS_LIBPTHREAD_SUFF=GC2
endif


RM=rm -f
MKDIR=mkdir

MGEAR_TARGET_BINARY_NAME=$(OS_LIB_PREF)$(TARGET_NAME)$(OS_SO_EXT)
MGEAR_TARGET_LIB_NAME=$(TARGET_NAME)
TEST_TARGET_BINARY_NAME=$(TARGET_NAME)$(TARGET_TEST_SUFFIX)$(OS_EXE_EXT)

MGEAR_TARGET_LIST=$(MGEAR_TARGET_BINARY_NAME)
TEST_TARGET_LIST=$(TEST_TARGET_BINARY_NAME)
TOTAL_TARGET_LIST=$(MGEAR_TARGET_LIST) $(TEST_TARGET_LIST)

release: clean $(MGEAR_TARGET_LIST)
test: release $(TEST_TARGET_LIST)

INT_DIR=intermediate
SRC_DIR=src
TEST_DIR=test
INC_DIR=include

SRC_INT_DIR=$(INT_DIR)/$(SRC_DIR)
TEST_INT_DIR=$(INT_DIR)/$(TEST_DIR)

SRC_LIST=$(wildcard $(SRC_DIR)/*$(OS_C_EXT))
SRC_OBJ_LIST=$(patsubst $(SRC_DIR)/%,$(SRC_INT_DIR)/%,$(patsubst %$(OS_C_EXT),%$(OS_OBJ_EXT),$(SRC_LIST)))
TEST_LIST=$(wildcard $(TEST_DIR)/*$(OS_CPP_EXT))
TEST_OBJ_LIST=$(patsubst $(TEST_DIR)/%,$(TEST_INT_DIR)/%,$(patsubst %$(OS_CPP_EXT),%$(OS_OBJ_EXT),$(TEST_LIST)))

TOTAL_OBJ_LIST=$(SRC_OBJ_LIST) $(TEST_OBJ_LIST)


DEF_LIST=_MUTEXGEAR_WITH_C11 \
	$(if $(subst YES,,$(HAVE_PTHREAD_H)),,HAVE_PTHREAD_H=1) \
	$(if $(subst YES,,$(HAVE_PTHREAD_MUTEXATTR_GETPRIOCEILING)),,HAVE_PTHREAD_MUTEXATTR_GETPRIOCEILING=1) \
	$(if $(subst YES,,$(HAVE_PTHREAD_MUTEXATTR_GETPROTOCOL)),,HAVE_PTHREAD_MUTEXATTR_GETPROTOCOL=1)
MGEAR_DEF_LIST=_MUTEXGEAR_DLL


INC_LIST=$(INC_DIR)
LNC_LIST=

OS_LIBPTHREAD_NAME=pthread$(OS_LIBPTHREAD_SUFF)

OS_LIBS+=$(if $(subst YES,,$(HAVE_LIBPTHREAD)),,$(OS_LIBPTHREAD_NAME))
OS_CXX_LIBS=$(if $(subst YES,,$(HAVE_LIBSTDCXX)),,stdc++) 
TEST_ADD_LIBS=$(MGEAR_TARGET_LIB_NAME)
TEST_ADD_LIBPATHS=.

COMP_GEN_FLAGS=$(addprefix -I,$(INC_LIST)) $(addprefix -D,$(DEF_LIST))
COMP_OPT_FLAGS=-O3 -DNDEBUG
COMP_DBG_FLAGS=-ggdb
COMP_PIC_FLAGS=-fPIC

MGEAR_COMP_GEN_FLAGS=-lang-c $(addprefix -D,$(MGEAR_DEF_LIST))

LINK_GEN_FLAGS=$(addprefix -L,$(LNC_LIST))
LINK_OPT_FLAGS=-O3
LINK_DBG_FLAGS=-ggdb
LINK_SHARED_FLAGS=-shared
LINK_OS_LIBS=$(addprefix -l,$(OS_LIBS))
LINK_OS_CXX_LIBS=$(addprefix -l,$(OS_CXX_LIBS))

TEST_LINK_LIBPATHS=$(addprefix -L,$(TEST_ADD_LIBPATHS))
TEST_LINK_LIBS=$(addprefix -l,$(TEST_ADD_LIBS))


$(MGEAR_TARGET_BINARY_NAME): $(SRC_OBJ_LIST)
	$(LD) $(LINK_SHARED_FLAGS) $(LINK_GEN_FLAGS) $(LINK_OPT_FLAGS) $(LINK_DBG_FLAGS) -o $@ $^ $(LINK_OS_LIBS)

$(SRC_INT_DIR)/%$(OS_OBJ_EXT): $(SRC_DIR)/%$(OS_C_EXT) | $(SRC_INT_DIR)
	$(CC) $(COMP_PIC_FLAGS) $(COMP_GEN_FLAGS) $(COMP_OPT_FLAGS) $(COMP_DBG_FLAGS) $(MGEAR_COMP_GEN_FLAGS) -c -o $@ $^

$(TEST_TARGET_BINARY_NAME): $(TEST_OBJ_LIST)
	$(LD) $(LINK_GEN_FLAGS) $(LINK_OPT_FLAGS) $(LINK_DBG_FLAGS) -o $@ $^ $(LINK_OS_LIBS) $(LINK_OS_CXX_LIBS) $(TEST_LINK_LIBS) $(TEST_LINK_LIBPATHS)

$(TEST_INT_DIR)/%$(OS_OBJ_EXT): $(TEST_DIR)/%$(OS_CPP_EXT) | $(TEST_INT_DIR)
	$(CXX) $(COMP_GEN_FLAGS) $(COMP_OPT_FLAGS) $(COMP_DBG_FLAGS) -c -o $@ $^

$(SRC_INT_DIR) $(TEST_INT_DIR): | $(INT_DIR)
$(SRC_INT_DIR) $(TEST_INT_DIR) $(INT_DIR):
	$(MKDIR) $@

clean:
	$(RM) $(TOTAL_TARGET_LIST) $(TOTAL_OBJ_LIST)

.phony: release test clean